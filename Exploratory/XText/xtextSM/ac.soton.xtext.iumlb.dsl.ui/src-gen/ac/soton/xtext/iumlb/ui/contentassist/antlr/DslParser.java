/*
* generated by Xtext
*/
package ac.soton.xtext.iumlb.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import ac.soton.xtext.iumlb.services.DslGrammarAccess;

public class DslParser extends AbstractContentAssistParser {
	
	@Inject
	private DslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected ac.soton.xtext.iumlb.ui.contentassist.antlr.internal.InternalDslParser createParser() {
		ac.soton.xtext.iumlb.ui.contentassist.antlr.internal.InternalDslParser result = new ac.soton.xtext.iumlb.ui.contentassist.antlr.internal.InternalDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractNodeAccess().getAlternatives(), "rule__AbstractNode__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getStatemachineAccess().getGroup(), "rule__Statemachine__Group__0");
					put(grammarAccess.getStatemachineAccess().getGroup_4(), "rule__Statemachine__Group_4__0");
					put(grammarAccess.getStatemachineAccess().getGroup_5(), "rule__Statemachine__Group_5__0");
					put(grammarAccess.getStatemachineAccess().getGroup_6(), "rule__Statemachine__Group_6__0");
					put(grammarAccess.getStatemachineAccess().getGroup_6_3(), "rule__Statemachine__Group_6_3__0");
					put(grammarAccess.getStatemachineAccess().getGroup_7(), "rule__Statemachine__Group_7__0");
					put(grammarAccess.getStatemachineAccess().getGroup_7_3(), "rule__Statemachine__Group_7_3__0");
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getStateAccess().getGroup_5(), "rule__State__Group_5__0");
					put(grammarAccess.getStateAccess().getGroup_5_3(), "rule__State__Group_5_3__0");
					put(grammarAccess.getStateAccess().getGroup_6(), "rule__State__Group_6__0");
					put(grammarAccess.getStateAccess().getGroup_6_3(), "rule__State__Group_6_3__0");
					put(grammarAccess.getStateAccess().getGroup_7(), "rule__State__Group_7__0");
					put(grammarAccess.getStateAccess().getGroup_8(), "rule__State__Group_8__0");
					put(grammarAccess.getStateAccess().getGroup_8_3(), "rule__State__Group_8_3__0");
					put(grammarAccess.getStateAccess().getGroup_9(), "rule__State__Group_9__0");
					put(grammarAccess.getStateAccess().getGroup_9_3(), "rule__State__Group_9_3__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_4(), "rule__Transition__Group_4__0");
					put(grammarAccess.getTransitionAccess().getGroup_5(), "rule__Transition__Group_5__0");
					put(grammarAccess.getTransitionAccess().getGroup_5_3(), "rule__Transition__Group_5_3__0");
					put(grammarAccess.getStringToStringMapEntryAccess().getGroup(), "rule__StringToStringMapEntry__Group__0");
					put(grammarAccess.getStringToStringMapEntryAccess().getGroup_3(), "rule__StringToStringMapEntry__Group_3__0");
					put(grammarAccess.getStringToStringMapEntryAccess().getGroup_4(), "rule__StringToStringMapEntry__Group_4__0");
					put(grammarAccess.getEObjectAccess().getGroup(), "rule__EObject__Group__0");
					put(grammarAccess.getInitialAccess().getGroup(), "rule__Initial__Group__0");
					put(grammarAccess.getInitialAccess().getGroup_4(), "rule__Initial__Group_4__0");
					put(grammarAccess.getFinalAccess().getGroup(), "rule__Final__Group__0");
					put(grammarAccess.getFinalAccess().getGroup_4(), "rule__Final__Group_4__0");
					put(grammarAccess.getAnyAccess().getGroup(), "rule__Any__Group__0");
					put(grammarAccess.getAnyAccess().getGroup_4(), "rule__Any__Group_4__0");
					put(grammarAccess.getJunctionAccess().getGroup(), "rule__Junction__Group__0");
					put(grammarAccess.getJunctionAccess().getGroup_4(), "rule__Junction__Group_4__0");
					put(grammarAccess.getForkAccess().getGroup(), "rule__Fork__Group__0");
					put(grammarAccess.getForkAccess().getGroup_4(), "rule__Fork__Group_4__0");
					put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
					put(grammarAccess.getInvariantAccess().getGroup(), "rule__Invariant__Group__0");
					put(grammarAccess.getInvariantAccess().getGroup_5(), "rule__Invariant__Group_5__0");
					put(grammarAccess.getInvariantAccess().getGroup_6(), "rule__Invariant__Group_6__0");
					put(grammarAccess.getStatemachineAccess().getLocalGeneratedAssignment_0(), "rule__Statemachine__LocalGeneratedAssignment_0");
					put(grammarAccess.getStatemachineAccess().getNameAssignment_2(), "rule__Statemachine__NameAssignment_2");
					put(grammarAccess.getStatemachineAccess().getCommentAssignment_4_1(), "rule__Statemachine__CommentAssignment_4_1");
					put(grammarAccess.getStatemachineAccess().getRefinesAssignment_5_1(), "rule__Statemachine__RefinesAssignment_5_1");
					put(grammarAccess.getStatemachineAccess().getNodesAssignment_6_2(), "rule__Statemachine__NodesAssignment_6_2");
					put(grammarAccess.getStatemachineAccess().getNodesAssignment_6_3_1(), "rule__Statemachine__NodesAssignment_6_3_1");
					put(grammarAccess.getStatemachineAccess().getTransitionsAssignment_7_2(), "rule__Statemachine__TransitionsAssignment_7_2");
					put(grammarAccess.getStatemachineAccess().getTransitionsAssignment_7_3_1(), "rule__Statemachine__TransitionsAssignment_7_3_1");
					put(grammarAccess.getStateAccess().getLocalGeneratedAssignment_1(), "rule__State__LocalGeneratedAssignment_1");
					put(grammarAccess.getStateAccess().getNameAssignment_3(), "rule__State__NameAssignment_3");
					put(grammarAccess.getStateAccess().getIncomingAssignment_5_2(), "rule__State__IncomingAssignment_5_2");
					put(grammarAccess.getStateAccess().getIncomingAssignment_5_3_1(), "rule__State__IncomingAssignment_5_3_1");
					put(grammarAccess.getStateAccess().getOutgoingAssignment_6_2(), "rule__State__OutgoingAssignment_6_2");
					put(grammarAccess.getStateAccess().getOutgoingAssignment_6_3_1(), "rule__State__OutgoingAssignment_6_3_1");
					put(grammarAccess.getStateAccess().getRefinesAssignment_7_1(), "rule__State__RefinesAssignment_7_1");
					put(grammarAccess.getStateAccess().getStatemachinesAssignment_8_2(), "rule__State__StatemachinesAssignment_8_2");
					put(grammarAccess.getStateAccess().getStatemachinesAssignment_8_3_1(), "rule__State__StatemachinesAssignment_8_3_1");
					put(grammarAccess.getStateAccess().getInvariantsAssignment_9_2(), "rule__State__InvariantsAssignment_9_2");
					put(grammarAccess.getStateAccess().getInvariantsAssignment_9_3_1(), "rule__State__InvariantsAssignment_9_3_1");
					put(grammarAccess.getTransitionAccess().getLocalGeneratedAssignment_0(), "rule__Transition__LocalGeneratedAssignment_0");
					put(grammarAccess.getTransitionAccess().getExtendedAssignment_1(), "rule__Transition__ExtendedAssignment_1");
					put(grammarAccess.getTransitionAccess().getCommentAssignment_4_1(), "rule__Transition__CommentAssignment_4_1");
					put(grammarAccess.getTransitionAccess().getElaboratesAssignment_5_2(), "rule__Transition__ElaboratesAssignment_5_2");
					put(grammarAccess.getTransitionAccess().getElaboratesAssignment_5_3_1(), "rule__Transition__ElaboratesAssignment_5_3_1");
					put(grammarAccess.getTransitionAccess().getTargetAssignment_7(), "rule__Transition__TargetAssignment_7");
					put(grammarAccess.getTransitionAccess().getSourceAssignment_9(), "rule__Transition__SourceAssignment_9");
					put(grammarAccess.getStringToStringMapEntryAccess().getKeyAssignment_3_1(), "rule__StringToStringMapEntry__KeyAssignment_3_1");
					put(grammarAccess.getStringToStringMapEntryAccess().getValueAssignment_4_1(), "rule__StringToStringMapEntry__ValueAssignment_4_1");
					put(grammarAccess.getInitialAccess().getLocalGeneratedAssignment_1(), "rule__Initial__LocalGeneratedAssignment_1");
					put(grammarAccess.getInitialAccess().getInternalIdAssignment_4_1(), "rule__Initial__InternalIdAssignment_4_1");
					put(grammarAccess.getFinalAccess().getLocalGeneratedAssignment_1(), "rule__Final__LocalGeneratedAssignment_1");
					put(grammarAccess.getFinalAccess().getInternalIdAssignment_4_1(), "rule__Final__InternalIdAssignment_4_1");
					put(grammarAccess.getAnyAccess().getLocalGeneratedAssignment_1(), "rule__Any__LocalGeneratedAssignment_1");
					put(grammarAccess.getAnyAccess().getInternalIdAssignment_4_1(), "rule__Any__InternalIdAssignment_4_1");
					put(grammarAccess.getJunctionAccess().getLocalGeneratedAssignment_1(), "rule__Junction__LocalGeneratedAssignment_1");
					put(grammarAccess.getJunctionAccess().getInternalIdAssignment_4_1(), "rule__Junction__InternalIdAssignment_4_1");
					put(grammarAccess.getForkAccess().getLocalGeneratedAssignment_1(), "rule__Fork__LocalGeneratedAssignment_1");
					put(grammarAccess.getForkAccess().getInternalIdAssignment_4_1(), "rule__Fork__InternalIdAssignment_4_1");
					put(grammarAccess.getEventAccess().getLocalGeneratedAssignment_1(), "rule__Event__LocalGeneratedAssignment_1");
					put(grammarAccess.getEventAccess().getExtendedAssignment_2(), "rule__Event__ExtendedAssignment_2");
					put(grammarAccess.getEventAccess().getNameAssignment_4(), "rule__Event__NameAssignment_4");
					put(grammarAccess.getInvariantAccess().getLocalGeneratedAssignment_0(), "rule__Invariant__LocalGeneratedAssignment_0");
					put(grammarAccess.getInvariantAccess().getTheoremAssignment_1(), "rule__Invariant__TheoremAssignment_1");
					put(grammarAccess.getInvariantAccess().getNameAssignment_3(), "rule__Invariant__NameAssignment_3");
					put(grammarAccess.getInvariantAccess().getInternalIdAssignment_5_1(), "rule__Invariant__InternalIdAssignment_5_1");
					put(grammarAccess.getInvariantAccess().getCommentAssignment_6_1(), "rule__Invariant__CommentAssignment_6_1");
					put(grammarAccess.getInvariantAccess().getPredicateAssignment_8(), "rule__Invariant__PredicateAssignment_8");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			ac.soton.xtext.iumlb.ui.contentassist.antlr.internal.InternalDslParser typedParser = (ac.soton.xtext.iumlb.ui.contentassist.antlr.internal.InternalDslParser) parser;
			typedParser.entryRuleAbstractNode();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
